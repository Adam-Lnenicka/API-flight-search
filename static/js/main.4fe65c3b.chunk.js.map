{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","flights","setFlights","departure","setDeparture","destination","setDestination","searchFlights","e","a","url","fetch","response","json","data","firstData","slice","console","log","useEffect","className","onSubmit","htmlFor","name","onChange","target","value","length","map","flight","i","cityFrom","flyFrom","cityTo","flyTo","DateTime","fromMillis","dTime","toFormat","aTime","fly_duration","price","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAsIeA,MAhIf,WAAgB,IAAD,EAGmBC,mBAAS,MAH5B,mBAGLC,EAHK,KAGIC,EAHJ,OAIuBF,mBAAS,IAJhC,mBAILG,EAJK,KAIMC,EAJN,OAK2BJ,mBAAS,IALpC,mBAKLK,EALK,KAKQC,EALR,KAUPC,EAAa,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAEdC,EAFc,oDAEqCP,EAFrC,eAEqDE,EAFrD,8EAIKM,MAAMD,GAJX,cAIZE,EAJY,gBAKCA,EAASC,OALV,OAKZC,EALY,OAMZC,EAAYD,EAAKA,KAAKE,MAAM,EAAG,GACrCC,QAAQC,IAAIH,GACZb,EAAWa,GARO,kDAUlBE,QAAQC,IAAR,MAVkB,0DAAH,sDAgCnB,OAlBAC,qBAAU,WACRZ,MAGA,CAACJ,EAAWE,IAeZ,sBAAKe,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACA,+CACA,sBAAMC,SAAUd,EAAhB,SACE,sBAAKa,UAAU,WAAf,UACE,gCACE,uBAAOA,UAAU,QAAQE,QAAQ,YAAjC,SAA6C,qDAC7C,yBAAQF,UAAU,qCAAqCG,KAAK,YAAYC,SApB1D,SAAChB,GACvBJ,EACEI,EAAEiB,OAAOC,QAkBH,UACE,2DACA,wBAAQA,MAAM,MAAd,oBACA,wBAAQA,MAAM,MAAd,oBACA,wBAAQA,MAAM,MAAd,oBACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,MAAd,0BAGJ,uBAAK,uBACL,gCACE,uBAAON,UAAU,QAAQE,QAAQ,YAAjC,SAA6C,oDAC7C,yBAAQF,UAAU,qCAAqCG,KAAK,cAAcC,SA1B1D,SAAChB,GACzBF,EACEE,EAAEiB,OAAOC,QAwBH,UACA,6DACI,wBAAQA,MAAM,MAAd,sBACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,MAAd,oBACA,wBAAQA,MAAM,MAAd,oBACA,wBAAQA,MAAM,MAAd,0BAGR,uBAAK,+BAOP,qBAAKN,UAAU,cAAf,SAEA,gCAEC,mCAAMjB,EAAUwB,OAAUxB,EAAY,MAAS,GAA/C,IAAqDE,KAEpDJ,IAEEA,EAAQ0B,OAER1B,EAAQ2B,KAER,SAACC,EAAQC,GAAT,OACE,qBAAIV,UAAU,cAAd,UACA,6BAAI,yCAAYU,EAAE,OAElB,sBAAKV,UAAU,aAAf,UACE,gCACE,4CAAc,mCAASS,EAAOE,SAAhB,KAA4BF,EAAOG,QAAnC,OAAd,OACA,0CAAY,mCAASH,EAAOI,OAAhB,KAA0BJ,EAAOK,MAAjC,OAAZ,UAEF,gCACE,6CAAe,iCAASC,WAASC,WAA0B,IAAfP,EAAOQ,OAAcC,SAAS,cAC1E,2CAAa,iCAASH,WAASC,WAA0B,IAAfP,EAAOU,OAAcD,SAAS,cACxE,4CAAc,iCAAST,EAAOW,eAA9B,UAEF,8BACA,yCAAW,mCAASX,EAAOY,MAAhB,UAAX,kBAOF,gEC1GGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4fe65c3b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { DateTime, datetimeFromREST  } from 'luxon';\r\nimport './App.css';\r\n// import Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  const [ flights, setFlights ] = useState(null)\r\n  const [ departure, setDeparture ] = useState('')\r\n  const [ destination, setDestination ] = useState('')\r\n\r\n  \r\n  // const url = 'https://api.skypicker.com/flights?flyFrom=PRG&to=LGW&dateFrom=18/11/2020&dateTo=12/12/2020&partner=picky&v=3'\r\n\r\n  const searchFlights = async (e) => {\r\n    // e.preventDefault()\r\n    const url = `https://api.skypicker.com/flights?flyFrom=${departure}&to=${destination}&dateFrom=12/01/2021&dateTo=12/12/2021&partner=picky&v=3`\r\n    try {\r\n      const response = await fetch(url)\r\n      const data = await response.json()\r\n      const firstData = data.data.slice(0, 8)\r\n      console.log(firstData)\r\n      setFlights(firstData)\r\n    }catch(err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    searchFlights();\r\n    // console.log(departure)\r\n    // console.log(destination)\r\n  },[departure, destination])\r\n\r\n  const selectDeparture = (e) => {\r\n    setDeparture(\r\n      e.target.value\r\n    )\r\n  } \r\n\r\n  const selectDestination = (e) => {\r\n    setDestination(\r\n      e.target.value\r\n    )\r\n  } \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"searchBar\">\r\n      <h1>Flight Search</h1>\r\n      <form onSubmit={searchFlights}>\r\n        <div className=\"dropdown\">\r\n          <div>\r\n            <label className=\"label\" htmlFor=\"departure\"><strong>Destination  </strong></label>\r\n            <select className=\"form-control form-control-sm w-100\" name=\"departure\" onChange={selectDeparture}>\r\n              <option>Choose your departure</option>\r\n              <option value=\"PRG\">Prague</option>\r\n              <option value=\"TXL\">Berlin</option>\r\n              <option value=\"WAW\">Warsaw</option>\r\n              <option value=\"PED\">Pardubice</option>\r\n              <option value=\"LON\">London</option>  \r\n            </select>\r\n          </div>\r\n          <br/><br/>\r\n          <div>\r\n            <label className=\"label\" htmlFor=\"departure\"><strong>Departure   </strong></label>\r\n            <select className=\"form-control form-control-sm w-100\" name=\"destination\" onChange={selectDestination}>\r\n            <option>Choose your destination</option>\r\n                <option value=\"VLC\">Valencia</option>\r\n                <option value=\"BCN\">Barcelona</option>\r\n                <option value=\"MAD\">Madrid</option>\r\n                <option value=\"MXP\">Milano</option>\r\n                <option value=\"AIA\">Athens</option>\r\n            </select>\r\n          </div>\r\n        <br/><br/>\r\n      </div>\r\n      </form>\r\n      \r\n      </div>\r\n\r\n    \r\n      <div className=\"flight-list\">\r\n      {/* <h3 className=\"card-title\">Flight Details:</h3> */}\r\n      <div>\r\n\r\n       <h2> {departure.length ? (departure + ' to') : '' } {destination}</h2>\r\n      \r\n      { flights && (\r\n\r\n        !!flights.length ? (\r\n        \r\n          flights.map (\r\n          \r\n          (flight, i) => \r\n            <ul className=\"flight-card\">\r\n            <li><h3>Option {i+1}</h3></li>\r\n    \r\n            <div className=\"inner-card\">\r\n              <div>\r\n                <li>Fly From: <strong>{flight.cityFrom} ({flight.flyFrom})</strong> </li>\r\n                <li>Fly To: <strong>{flight.cityTo} ({flight.flyTo})</strong> </li>\r\n              </div>\r\n              <div>\r\n                <li>Departure: <strong>{DateTime.fromMillis(flight.dTime * 1000).toFormat('hh:mm')}</strong></li>\r\n                <li>Arrival: <strong>{DateTime.fromMillis(flight.aTime * 1000).toFormat('hh:mm')}</strong></li>\r\n                <li>Duration: <strong>{flight.fly_duration}</strong> </li>\r\n              </div>\r\n              <div>\r\n              <li>Price: <strong>{flight.price} EUR</strong> </li>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n          \r\n          )) : (\r\n            \r\n            <h2>No flights available</h2>\r\n\r\n          )\r\n        \r\n          )\r\n        }\r\n\r\n      </div>\r\n  \r\n\r\n    </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}